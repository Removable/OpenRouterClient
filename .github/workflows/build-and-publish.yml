# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: Build and Publish to Nuget registry

on:
  workflow_dispatch:
  push:
    branches: [ "master" ]
    paths:
      - 'OpenRouterClient.Library/**'
      - '.github/workflows/build-and-publish.yml'
  pull_request:
    branches: [ "*" ]
    paths:
      - 'OpenRouterClient.Library/**'
      - '.github/workflows/build-and-publish.yml'
  release:
    types:
      - published

env:
  PROJECT_FILE_PATH: OpenRouterClient.Library/OpenRouterClient.Library.csproj
  NUGET_DIR: Release
  DOTNET_VERSION: 9.0.x

jobs:
  create_nuget_package:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        name: Checkout code
        with:
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
            dotnet-version: ${{ env.DOTNET_VERSION }}
            
      - name: Restore Nuget packages
        run: dotnet restore
        
      - name: Build the project
        run: dotnet build --configuration Release --no-restore

      - name: Create Nuget directory
        run: dotnet pack --configuration Release --no-build --output ${{ env.NUGET_DIR }} ${{ env.PROJECT_FILE_PATH }}

      - name: Publish as an artifact
        uses: actions/upload-artifact@v4
        with:
          name: nuget-package
          if-no-files-found: error
          retention-days: 7
          path: ${{ env.NUGET_DIR }}/*.nupkg
  
  validate_nuget_package:
    runs-on: windows-latest
    needs: create_nuget_package
    steps:
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Download Nuget package
        uses: actions/download-artifact@v4
        with:
          name: nuget-package
          path: ${{ env.NUGET_DIR }}

      - name: Install nuget validator
        run: dotnet tool update Meziantou.Framework.NuGetPackageValidation.Tool --global
      - name: Validate package
        run: meziantou.validate-nuget-package (Get-ChildItem "${{ env.NUGET_DIR }}/*.nupkg") --excluded-rule-ids 119
  
  deploy:
    if: github.event_name == 'release'
    runs-on: windows-latest
    needs: [ validate_nuget_package ]
    steps:
      - name: Download Nuget package
        uses: actions/download-artifact@v4
        with:
          name: nuget-package
          path: ${{ env.NUGET_DIR }}

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Publish NuGet package
        run: |
          foreach($file in (Get-ChildItem "${{ env.NUGET_DIR }}" -Recurse -Include *.nupkg)) {
              dotnet nuget push $file --api-key "${{ secrets.NUGET_APIKEY }}" --source https://api.nuget.org/v3/index.json --skip-duplicate
          }